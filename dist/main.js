(()=>{"use strict";var e=document.querySelector(".top-navigation"),t=document.querySelector(".nav-toggle"),s=document.querySelectorAll(".nav-link"),a=document.getElementById("wrapper"),o=document.querySelector(".burger-line-top"),i=document.querySelector(".burger-line-bottom");function n(){var s="false"===e.getAttribute("data-visible");t.setAttribute("aria-expanded",s),e.setAttribute("data-visible",s),e.setAttribute("aria-expanded",s),a.className=s?"wrapper inactive":"wrapper",i.style.y=s?"45":"20",o.style.y=s?"45":"80"}a.addEventListener("click",(function(){"true"===e.getAttribute("data-visible")&&n()})),t.addEventListener("click",(function(){n()})),s.forEach((function(e){return e.addEventListener("click",(function(){n()}))}));var r=document.getElementById("projects-set");[{id:"project-1",prName:"TV Hub Series",description:"TV Hub Series is a web application developed using HTML, CSS, and JavaScript. It serves as a centralized platform for TV series enthusiasts, offering a user-friendly interface to explore, discover, and watch a vast collection of TV series. The application utilizes RESTful APIs to fetch data about series, episodes, and cast information from external sources, ensuring up-to-date and comprehensive content. The frontend is designed with a responsive layout, adapting seamlessly to different devices and screen sizes for an optimal viewing experience. The codebase follows modular and maintainable architecture patterns, adhering to industry best practices for scalability and extensibility. TV Hub Series aims to provide an immersive and convenient TV series browsing experience, combining modern design elements with reliable functionality.",mobileImg:"assets/img/screenshots/tv-hub-phone.jpg",desktopImg:"assets/img/screenshots/tv-hub.png",mobileImgWebP:"assets/img/screenshots/tv-hub-phone.webp",desktopImgWebP:"assets/img/screenshots/tv-hub.webp",technologies:["CSS","JavaScript","HTML","Webpack","Jest"],liveVersion:"https://alvaroiporre.github.io/JavaScript-Capstone-Project/",source:"https://github.com/alvaroiporre/JavaScript-Capstone-Project"},{id:"project-2",prName:"To-Do List",description:"The Simple To Do List is a single-page application designed to help users add and remove tasks from a list. It features a class with well-defined methods and utilizes local storage to store data. The project is built using modular JavaScript and implements the latest ES6 syntax and features.",mobileImg:"assets/img/screenshots/todo-phone.jpg",desktopImg:"assets/img/screenshots/todo.png",mobileImgWebP:"assets/img/screenshots/todo-phone.webp",desktopImgWebP:"assets/img/screenshots/todo.webp",technologies:["CSS","JavaScript","HTML","Webpack","Jest"],liveVersion:"https://romans-adi.github.io/todo-app/",source:"https://github.com/romans-adi/todo-app"},{id:"project-3",prName:"Awesome Books",description:"This project is a mid-fidelity single-page application (SPA) that enables users to add and remove books from a list.",mobileImg:"assets/img/screenshots/awesome-phone.jpg",desktopImg:"assets/img/screenshots/awesome.png",mobileImgWebP:"assets/img/screenshots/awesome-phone.webp",desktopImgWebP:"assets/img/screenshots/awesome.webp",technologies:["HTML","CSS","JavaScript","Webpack"],liveVersion:"https://romans-adi.github.io/awesome-books/",source:"https://github.com/romans-adi/awesome-books"},{id:"project-4",prName:"ValMusic",description:"This website presents a realistic and immersive representation of a software engineering studio, featuring multiple pages with interactive media that showcase the company's services and culture.",mobileImg:"assets/img/screenshots/valmusic-phone.jpg",desktopImg:"assets/img/screenshots/valmusic.png",mobileImgWebP:"assets/img/screenshots/valmusic-phone.webp",desktopImgWebP:"assets/img/screenshots/valmusic.webp",technologies:["HTML","CSS","JavaScript","PHP","jQuery","Tailwind"],liveVersion:"https://valmusic.co.uk/",source:"https://github.com/romans-adi/valmusic"},{id:"project-5",prName:"LOL Draft 2023",description:"The project centers around a fictional event with all names, cities, and venues generated by free AI generators and/or the project author.",mobileImg:"assets/img/screenshots/lol-drafts-phone.jpg",desktopImg:"assets/img/screenshots/lol-draft.png",mobileImgWebP:"assets/img/screenshots/lol-drafts-phone.webp",desktopImgWebP:"assets/img/screenshots/lol-draft.webp",technologies:["HTML","CSS","JavaScript","Webpack"],liveVersion:"https://romans-adi.github.io/lol-draft-2023/",source:"https://github.com/romans-adi/lol-draft-2023"},{id:"project-6",prName:"Leaderboard",description:"The Leaderboard is a platform that allows users to view and add scores to a leaderboard. It provides a user-friendly interface for tracking and displaying recent scores, along with the option to add new scores. The application uses API requests and local storage to store and synchronize the data. The synchronization process ensures that the data remains intact even when there is no response from the server or when data retrieval is not possible. When new data is fetched from the server, it is updated in the local storage. Additionally, any new scores that were not sent yet, are sent to the server. The application logic revolves around comparing the existing data stored in the local storage with the data fetched from the server to ensure consistency and accuracy.",mobileImg:"assets/img/screenshots/leaderboard-mobile.jpg",desktopImg:"assets/img/screenshots/leaderboard.png",mobileImgWebP:"assets/img/screenshots/leaderboard-mobile.webp",desktopImgWebP:"assets/img/screenshots/leaderboard.webp",technologies:["HTML","CSS","JavaScript","Webpack","Tailwind"],liveVersion:"https://romans-adi.github.io/leaderboard/",source:"https://github.com/romans-adi/leaderboard"}].forEach((function(e){r.innerHTML+='\n    <div class="project-card relative" id="'.concat(e.id,'">\n      <picture class="placeholder-img">\n        <h3 class="project-card-heading">').concat(e.prName,'</h3>\n        <source srcset="').concat(e.mobileImgWebP,'" type="image/webp" />\n        <source srcset="').concat(e.mobileImg,'" type="image" />\n        <img src="').concat(e.mobileImg,'" width="100%" alt="project-screenshot" class="project-screenshot project-0">\n      </picture>\n      <div class="project-card-content">\n        <button type="button" class="btn-success btn-see-project btn-open">See Project</button>\n        <div class="modal-overlay" id="modal-overlay">\n  <div class="modal">\n  <div class="flex w-full">\n            <h3 class="modal-heading flex space-between">').concat(e.prName,'\n            <button class="modal-toggle btn-close">\n            <svg class="modal-close" viewBox="0 0 50 50" width="14" height="14">\n               <line x1="0" y1="0" x2="50" y2="50" />\n               <line x1="50" y1="0" x2="0" y2="50" />\n            </svg>\n          </button></h3>\n    </div>\n    <div class="modal-bg modal-exit"></div>\n    <div class="modal-container">\n      <div class="img-container">\n        <img class="modal-mobile-img" src="').concat(e.mobileImg,'" alt="modal-illustration">\n        <img class="modal-desktop-img"  src="').concat(e.desktopImg,'" alt="modal-illustration">\n      </div>\n      <div class="modal-main-layout">\n        <div class="top">\n          <ul class="tools-list">\n            ').concat(e.technologies.map((function(e){return'<li class="tool">'.concat(e,"</li>")})).join(""),"\n          </ul>\n        </div>\n        <p>").concat(e.description,'</p>\n        <div class="bottom">\n          <div class="modal-btn-group">\n            <a href="').concat(e.liveVersion,'" target=_blank>\n              <button type="button" class="btn-success btn-success-modal see-live">See Live</button>\n            </a>\n            <a href="').concat(e.source,'" target=_blank>\n              <button type="button" class="btn-success btn-success-modal source">See Source</button>\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n      </div>\n    </div>\n  ')}));var c=document.querySelectorAll(".btn-open"),l=document.querySelectorAll(".modal"),d=document.querySelectorAll(".modal-overlay"),m=document.querySelectorAll(".project-card"),p=document.querySelector(".works-heading"),u=document.querySelector("#works"),g=document.querySelector("main");function h(e){e.style.top=0,e.style.height="100vh"}c.forEach((function(t,s){t.addEventListener("click",(function(){var t;l[t=s].classList.add("active"),d[t].classList.add("active"),d.forEach(h),r.style.margin="0",m[t].classList.add("modal-active"),m[t].style.height="100vh",e.style.display="none",p.style.display="none",u.style.padding="0",g.scrollIntoView({behavior:"smooth"}),g.style.padding="0",u.style.marginTop="0",document.body.style.overflow="hidden",m.forEach((function(e,s){s!==t&&e.classList.add("hidden")})),m[t].classList.add("modal-active")}))})),document.querySelectorAll(".btn-close").forEach((function(t,s){t.addEventListener("click",(function(){var t;l[t=s].classList.remove("active"),d[t].classList.remove("active"),r.style.margin="0 auto",m[t].classList.remove("modal-active"),m[t].style.height="100%",m[t].style.marginTop="0",e.style.display="flex",document.body.style.overflow="auto",m.forEach((function(e,t){e.classList.remove("hidden"),e.classList.remove("modal-active")})),r.style.margin="",m.forEach((function(e){e.style.height="",e.style.marginTop=""})),e.style.display="flex",p.style.display="",u.style.padding="",g.style.padding="",u.style.marginTop="",document.body.style.overflow="auto"}))}));var v=document.getElementById("contact-form");v.addEventListener("input",(function(){var e=document.getElementById("email").value,t=document.getElementById("email");e.match(/^[a-z]+@[a-z0-9-]+\.[a-z]{2,3}$/g)?t.classList.add("valid-input"):t.classList.remove("valid-input")})),v.addEventListener("submit",(function(e){var t,s=document.querySelector(".error");return document.getElementById("email").value.match(/^[a-z]+@[a-z0-9-]+\.[a-z]{2,3}$/g)||((t=s).classList.contains("transparent")&&(t.classList.remove("transparent"),t.classList.add("red")),e.preventDefault()),!0}));var b=document.querySelector("#username"),y=document.querySelector("#email"),f=document.querySelector("#message"),w=JSON.parse(localStorage.getItem("formData"))||{};w.name&&(b.value=w.name),w.email&&(y.value=w.email),w.comments&&(f.value=w.message),v.addEventListener("input",(function(e){w[e.target.name]=e.target.value,localStorage.setItem("formData",JSON.stringify(w))}));var S=JSON.parse(localStorage.getItem("formData"));S&&(y.value=S.email,f.value=S.message,b.value=S.username),v.addEventListener("submit",(function(){localStorage.clear()}))})();